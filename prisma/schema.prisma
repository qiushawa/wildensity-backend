generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Camera {
    camera_id            Int
    area_id              Int
    camera_name          String?             @db.VarChar(50)
    location_description String?             @db.VarChar(50)
    longitude            Float?
    latitude             Float?
    sd_card_capacity     Int
    sd_card_used_space   Int
    status               CameraStatus?       @default(LOCATION_UNKNOWN)
    area                 Area                @relation("AreaToCamera", fields: [area_id], references: [area_id])
    detection_events     DetectionEvents[]

    @@id([camera_id, area_id])
}

model Area {
    area_id   Int      @id @default(autoincrement())
    area_name String?  @db.VarChar(100)
    boundary  Json?
    cameras   Camera[] @relation("AreaToCamera")
}

model Species {
    species_id         Int                 @id @default(autoincrement())
    species_name       String              @db.VarChar(100)
    detection_events   DetectionEvents[]
}

model DetectionEvents {
    event_id            Int      @id @default(autoincrement())

    camera_id           Int
    area_id             Int
    species_id          Int

    start_timestamp     DateTime? @db.DateTime(0)
    end_timestamp       DateTime? @db.DateTime(0)

    duration_s          Float?
    movement_distance_m Float?
    num_individuals     Int      @default(1)

    camera              Camera   @relation(fields: [camera_id, area_id], references: [camera_id, area_id])
    species             Species  @relation(fields: [species_id], references: [species_id])

    track_points        RadarTrackPoint[]
}

model RadarTrackPoint {
    track_point_id Int      @id @default(autoincrement())
    event_id       Int

    timestamp      DateTime? @db.DateTime(0)
    coordinate_x   Float
    coordinate_y   Float

    event          DetectionEvents @relation(fields: [event_id], references: [event_id])
}

enum CameraStatus {
    ONLINE
    OFFLINE
    LOCATION_UNKNOWN
}
